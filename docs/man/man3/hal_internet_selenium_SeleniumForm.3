.TH "hal.internet.selenium.SeleniumForm" 3 "Tue Jan 10 2017" "Version 4.3" "PyHal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hal.internet.selenium.SeleniumForm \- 
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBfill_form_field\fP (browser, field_name, field_value)"
.br
.ti -1c
.RI "def \fBfill_login_form\fP (browser, username, username_field, userpassword, userpassword_field)"
.br
.ti -1c
.RI "def \fBsubmit_form\fP (browser, button_name)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
Great and simple static methods to deal with selenium webdrivers. 
.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def hal\&.internet\&.selenium\&.SeleniumForm\&.fill_form_field ( browser,  field_name,  field_value)\fC [static]\fP"

.PP
.nf
:param browser: webdriver
    Browser to use to submit form.
:param field_name :string
    Name of field to fill
:param field_value: string
    Value with which to fill field.
:return: void
    Fill given field wiht given value.

.fi
.PP
 
.SS "def hal\&.internet\&.selenium\&.SeleniumForm\&.fill_login_form ( browser,  username,  username_field,  userpassword,  userpassword_field)\fC [static]\fP"

.PP
.nf
:param browser: webdriver
    Browser to use to submit form.
:param username: string
    Username of user to login.
:param username_field: string
    Name of field to fill with username.
:param userpassword: string
    Password of user to login.
:param userpassword_field: string
    Name of field to fill with userpassword.
:return: void
    Form filled with given information.

.fi
.PP
 
.SS "def hal\&.internet\&.selenium\&.SeleniumForm\&.submit_form ( browser,  button_name)\fC [static]\fP"

.PP
.nf
:param browser: webdriver
    Browser to use to submit form.
:param button_name: string
    Name of button to press to submit form
:return: void
    Submit form.

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for PyHal from the source code\&.
